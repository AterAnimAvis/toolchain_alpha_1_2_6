--- a/net/minecraft/src/RenderBlocks.java
+++ b/net/minecraft/src/RenderBlocks.java
@@ -6,7 +6,7 @@
    private IBlockAccess field_1772_a;
    private int field_1771_b = -1;
    private boolean field_1774_c = false;
-   private boolean field_1773_d = false;
+   private final boolean field_1773_d = false;
 
    public RenderBlocks(IBlockAccess p_i30_1_) {
       this.field_1772_a = p_i30_1_;
@@ -51,7 +51,7 @@
       } else if (i == 11) {
          return this.func_1240_m(p_1234_1_, p_1234_2_, p_1234_3_, p_1234_4_);
       } else {
-         return i == 12 ? this.func_1229_c(p_1234_1_, p_1234_2_, p_1234_3_, p_1234_4_) : false;
+         return i == 12 && this.func_1229_c(p_1234_1_, p_1234_2_, p_1234_3_, p_1234_4_);
       }
    }
 
@@ -64,19 +64,19 @@
       }
 
       tessellator.func_987_a(f, f, f);
-      double d0 = (double)0.4F;
+      double d0 = 0.4F;
       double d1 = 0.5D - d0;
-      double d2 = (double)0.2F;
+      double d2 = 0.2F;
       if (i == 1) {
-         this.func_1237_a(p_1241_1_, (double)p_1241_2_ - d1, (double)p_1241_3_ + d2, (double)p_1241_4_, -d0, 0.0D);
+         this.func_1237_a(p_1241_1_, (double)p_1241_2_ - d1, (double)p_1241_3_ + d2, p_1241_4_, -d0, 0.0D);
       } else if (i == 2) {
-         this.func_1237_a(p_1241_1_, (double)p_1241_2_ + d1, (double)p_1241_3_ + d2, (double)p_1241_4_, d0, 0.0D);
+         this.func_1237_a(p_1241_1_, (double)p_1241_2_ + d1, (double)p_1241_3_ + d2, p_1241_4_, d0, 0.0D);
       } else if (i == 3) {
-         this.func_1237_a(p_1241_1_, (double)p_1241_2_, (double)p_1241_3_ + d2, (double)p_1241_4_ - d1, 0.0D, -d0);
+         this.func_1237_a(p_1241_1_, p_1241_2_, (double)p_1241_3_ + d2, (double)p_1241_4_ - d1, 0.0D, -d0);
       } else if (i == 4) {
-         this.func_1237_a(p_1241_1_, (double)p_1241_2_, (double)p_1241_3_ + d2, (double)p_1241_4_ + d1, 0.0D, d0);
+         this.func_1237_a(p_1241_1_, p_1241_2_, (double)p_1241_3_ + d2, (double)p_1241_4_ + d1, 0.0D, d0);
       } else {
-         this.func_1237_a(p_1241_1_, (double)p_1241_2_, (double)p_1241_3_, (double)p_1241_4_, 0.0D, 0.0D);
+         this.func_1237_a(p_1241_1_, p_1241_2_, p_1241_3_, p_1241_4_, 0.0D, 0.0D);
       }
 
       return true;
@@ -135,14 +135,14 @@
       float f8 = 0.0625F;
       float f9 = 0.0625F;
       float f10 = 0.625F;
-      avec3d[0] = Vec3D.func_1248_b((double)(-f8), 0.0D, (double)(-f9));
-      avec3d[1] = Vec3D.func_1248_b((double)f8, 0.0D, (double)(-f9));
-      avec3d[2] = Vec3D.func_1248_b((double)f8, 0.0D, (double)f9);
-      avec3d[3] = Vec3D.func_1248_b((double)(-f8), 0.0D, (double)f9);
-      avec3d[4] = Vec3D.func_1248_b((double)(-f8), (double)f10, (double)(-f9));
-      avec3d[5] = Vec3D.func_1248_b((double)f8, (double)f10, (double)(-f9));
-      avec3d[6] = Vec3D.func_1248_b((double)f8, (double)f10, (double)f9);
-      avec3d[7] = Vec3D.func_1248_b((double)(-f8), (double)f10, (double)f9);
+      avec3d[0] = Vec3D.func_1248_b(-f8, 0.0D, -f9);
+      avec3d[1] = Vec3D.func_1248_b(f8, 0.0D, -f9);
+      avec3d[2] = Vec3D.func_1248_b(f8, 0.0D, f9);
+      avec3d[3] = Vec3D.func_1248_b(-f8, 0.0D, f9);
+      avec3d[4] = Vec3D.func_1248_b(-f8, f10, -f9);
+      avec3d[5] = Vec3D.func_1248_b(f8, f10, -f9);
+      avec3d[6] = Vec3D.func_1248_b(f8, f10, f9);
+      avec3d[7] = Vec3D.func_1248_b(-f8, f10, f9);
 
       for(int j1 = 0; j1 < 8; ++j1) {
          if (flag) {
@@ -177,14 +177,13 @@
             }
 
             avec3d[j1].field_1776_a += (double)p_1229_2_ + 0.5D;
-            avec3d[j1].field_1775_b += (double)((float)p_1229_3_ + 0.5F);
-            avec3d[j1].field_1779_c += (double)p_1229_4_ + 0.5D;
+            avec3d[j1].field_1775_b += (float)p_1229_3_ + 0.5F;
          } else {
             avec3d[j1].field_1776_a += (double)p_1229_2_ + 0.5D;
-            avec3d[j1].field_1775_b += (double)((float)p_1229_3_ + 0.125F);
+            avec3d[j1].field_1775_b += (float)p_1229_3_ + 0.125F;
+         }
             avec3d[j1].field_1779_c += (double)p_1229_4_ + 0.5D;
          }
-      }
 
       Vec3D vec3d3 = null;
       Vec3D vec3d = null;
@@ -236,10 +235,10 @@
             vec3d2 = avec3d[4];
          }
 
-         tessellator.func_983_a(vec3d3.field_1776_a, vec3d3.field_1775_b, vec3d3.field_1779_c, (double)f4, (double)f7);
-         tessellator.func_983_a(vec3d.field_1776_a, vec3d.field_1775_b, vec3d.field_1779_c, (double)f5, (double)f7);
-         tessellator.func_983_a(vec3d1.field_1776_a, vec3d1.field_1775_b, vec3d1.field_1779_c, (double)f5, (double)f6);
-         tessellator.func_983_a(vec3d2.field_1776_a, vec3d2.field_1775_b, vec3d2.field_1779_c, (double)f4, (double)f6);
+         tessellator.func_983_a(vec3d3.field_1776_a, vec3d3.field_1775_b, vec3d3.field_1779_c, f4, f7);
+         tessellator.func_983_a(vec3d.field_1776_a, vec3d.field_1775_b, vec3d.field_1779_c, f5, f7);
+         tessellator.func_983_a(vec3d1.field_1776_a, vec3d1.field_1775_b, vec3d1.field_1779_c, f5, f6);
+         tessellator.func_983_a(vec3d2.field_1776_a, vec3d2.field_1775_b, vec3d2.field_1779_c, f4, f6);
       }
 
       return true;
@@ -256,19 +255,19 @@
       tessellator.func_987_a(f, f, f);
       int j = (i & 15) << 4;
       int k = i & 240;
-      double d0 = (double)((float)j / 256.0F);
-      double d1 = (double)(((float)j + 15.99F) / 256.0F);
-      double d2 = (double)((float)k / 256.0F);
-      double d3 = (double)(((float)k + 15.99F) / 256.0F);
+      double d0 = (float)j / 256.0F;
+      double d1 = ((float)j + 15.99F) / 256.0F;
+      double d2 = (float)k / 256.0F;
+      double d3 = ((float)k + 15.99F) / 256.0F;
       float f1 = 1.4F;
       if (!this.field_1772_a.func_601_g(p_1235_2_, p_1235_3_ - 1, p_1235_4_) && !Block.field_402_as.func_261_b(this.field_1772_a, p_1235_2_, p_1235_3_ - 1, p_1235_4_)) {
          float f3 = 0.2F;
          float f2 = 0.0625F;
          if ((p_1235_2_ + p_1235_3_ + p_1235_4_ & 1) == 1) {
-            d0 = (double)((float)j / 256.0F);
-            d1 = (double)(((float)j + 15.99F) / 256.0F);
-            d2 = (double)((float)(k + 16) / 256.0F);
-            d3 = (double)(((float)k + 15.99F + 16.0F) / 256.0F);
+            d0 = (float)j / 256.0F;
+            d1 = ((float)j + 15.99F) / 256.0F;
+            d2 = (float)(k + 16) / 256.0F;
+            d3 = ((float)k + 15.99F + 16.0F) / 256.0F;
          }
 
          if ((p_1235_2_ / 2 + p_1235_3_ / 2 + p_1235_4_ / 2 & 1) == 1) {
@@ -278,47 +277,47 @@
          }
 
          if (Block.field_402_as.func_261_b(this.field_1772_a, p_1235_2_ - 1, p_1235_3_, p_1235_4_)) {
-            tessellator.func_983_a((double)((float)p_1235_2_ + f3), (double)((float)p_1235_3_ + f1 + f2), (double)(p_1235_4_ + 1), d1, d2);
-            tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 1), d1, d3);
-            tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 0), d0, d3);
-            tessellator.func_983_a((double)((float)p_1235_2_ + f3), (double)((float)p_1235_3_ + f1 + f2), (double)(p_1235_4_ + 0), d0, d2);
-            tessellator.func_983_a((double)((float)p_1235_2_ + f3), (double)((float)p_1235_3_ + f1 + f2), (double)(p_1235_4_ + 0), d0, d2);
-            tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 0), d0, d3);
-            tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 1), d1, d3);
-            tessellator.func_983_a((double)((float)p_1235_2_ + f3), (double)((float)p_1235_3_ + f1 + f2), (double)(p_1235_4_ + 1), d1, d2);
+            tessellator.func_983_a((float)p_1235_2_ + f3, (float)p_1235_3_ + f1 + f2, p_1235_4_ + 1, d1, d2);
+            tessellator.func_983_a(p_1235_2_ + 0, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 1, d1, d3);
+            tessellator.func_983_a(p_1235_2_ + 0, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 0, d0, d3);
+            tessellator.func_983_a((float)p_1235_2_ + f3, (float)p_1235_3_ + f1 + f2, p_1235_4_ + 0, d0, d2);
+            tessellator.func_983_a((float)p_1235_2_ + f3, (float)p_1235_3_ + f1 + f2, p_1235_4_ + 0, d0, d2);
+            tessellator.func_983_a(p_1235_2_ + 0, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 0, d0, d3);
+            tessellator.func_983_a(p_1235_2_ + 0, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 1, d1, d3);
+            tessellator.func_983_a((float)p_1235_2_ + f3, (float)p_1235_3_ + f1 + f2, p_1235_4_ + 1, d1, d2);
          }
 
          if (Block.field_402_as.func_261_b(this.field_1772_a, p_1235_2_ + 1, p_1235_3_, p_1235_4_)) {
-            tessellator.func_983_a((double)((float)(p_1235_2_ + 1) - f3), (double)((float)p_1235_3_ + f1 + f2), (double)(p_1235_4_ + 0), d0, d2);
-            tessellator.func_983_a((double)(p_1235_2_ + 1 - 0), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 0), d0, d3);
-            tessellator.func_983_a((double)(p_1235_2_ + 1 - 0), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 1), d1, d3);
-            tessellator.func_983_a((double)((float)(p_1235_2_ + 1) - f3), (double)((float)p_1235_3_ + f1 + f2), (double)(p_1235_4_ + 1), d1, d2);
-            tessellator.func_983_a((double)((float)(p_1235_2_ + 1) - f3), (double)((float)p_1235_3_ + f1 + f2), (double)(p_1235_4_ + 1), d1, d2);
-            tessellator.func_983_a((double)(p_1235_2_ + 1 - 0), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 1), d1, d3);
-            tessellator.func_983_a((double)(p_1235_2_ + 1 - 0), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 0), d0, d3);
-            tessellator.func_983_a((double)((float)(p_1235_2_ + 1) - f3), (double)((float)p_1235_3_ + f1 + f2), (double)(p_1235_4_ + 0), d0, d2);
+            tessellator.func_983_a((float)(p_1235_2_ + 1) - f3, (float)p_1235_3_ + f1 + f2, p_1235_4_, d0, d2);
+            tessellator.func_983_a(p_1235_2_ + 1 - 0, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 0, d0, d3);
+            tessellator.func_983_a(p_1235_2_ + 1 - 0, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 1, d1, d3);
+            tessellator.func_983_a((float)(p_1235_2_ + 1) - f3, (float)p_1235_3_ + f1 + f2, p_1235_4_ + 1, d1, d2);
+            tessellator.func_983_a((float)(p_1235_2_ + 1) - f3, (float)p_1235_3_ + f1 + f2, p_1235_4_ + 1, d1, d2);
+            tessellator.func_983_a(p_1235_2_ + 1 - 0, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 1, d1, d3);
+            tessellator.func_983_a(p_1235_2_ + 1 - 0, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 0, d0, d3);
+            tessellator.func_983_a((float)(p_1235_2_ + 1) - f3, (float)p_1235_3_ + f1 + f2, p_1235_4_ + 0, d0, d2);
          }
 
          if (Block.field_402_as.func_261_b(this.field_1772_a, p_1235_2_, p_1235_3_, p_1235_4_ - 1)) {
-            tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)p_1235_3_ + f1 + f2), (double)((float)p_1235_4_ + f3), d1, d2);
-            tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 0), d1, d3);
-            tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 0), d0, d3);
-            tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)p_1235_3_ + f1 + f2), (double)((float)p_1235_4_ + f3), d0, d2);
-            tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)p_1235_3_ + f1 + f2), (double)((float)p_1235_4_ + f3), d0, d2);
-            tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 0), d0, d3);
-            tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 0), d1, d3);
-            tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)p_1235_3_ + f1 + f2), (double)((float)p_1235_4_ + f3), d1, d2);
+            tessellator.func_983_a(p_1235_2_ + 0, (float)p_1235_3_ + f1 + f2, (float)p_1235_4_ + f3, d1, d2);
+            tessellator.func_983_a(p_1235_2_ + 0, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 0, d1, d3);
+            tessellator.func_983_a(p_1235_2_ + 1, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 0, d0, d3);
+            tessellator.func_983_a(p_1235_2_ + 1, (float)p_1235_3_ + f1 + f2, (float)p_1235_4_ + f3, d0, d2);
+            tessellator.func_983_a(p_1235_2_ + 1, (float)p_1235_3_ + f1 + f2, (float)p_1235_4_ + f3, d0, d2);
+            tessellator.func_983_a(p_1235_2_ + 1, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 0, d0, d3);
+            tessellator.func_983_a(p_1235_2_ + 0, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 0, d1, d3);
+            tessellator.func_983_a(p_1235_2_ + 0, (float)p_1235_3_ + f1 + f2, (float)p_1235_4_ + f3, d1, d2);
          }
 
          if (Block.field_402_as.func_261_b(this.field_1772_a, p_1235_2_, p_1235_3_, p_1235_4_ + 1)) {
-            tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)p_1235_3_ + f1 + f2), (double)((float)(p_1235_4_ + 1) - f3), d0, d2);
-            tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 1 - 0), d0, d3);
-            tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 1 - 0), d1, d3);
-            tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)p_1235_3_ + f1 + f2), (double)((float)(p_1235_4_ + 1) - f3), d1, d2);
-            tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)p_1235_3_ + f1 + f2), (double)((float)(p_1235_4_ + 1) - f3), d1, d2);
-            tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 1 - 0), d1, d3);
-            tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)(p_1235_3_ + 0) + f2), (double)(p_1235_4_ + 1 - 0), d0, d3);
-            tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)p_1235_3_ + f1 + f2), (double)((float)(p_1235_4_ + 1) - f3), d0, d2);
+            tessellator.func_983_a(p_1235_2_ + 1, (float)p_1235_3_ + f1 + f2, (float)(p_1235_4_ + 1) - f3, d0, d2);
+            tessellator.func_983_a(p_1235_2_ + 1, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 1 - 0, d0, d3);
+            tessellator.func_983_a(p_1235_2_ + 0, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 1 - 0, d1, d3);
+            tessellator.func_983_a(p_1235_2_ + 0, (float)p_1235_3_ + f1 + f2, (float)(p_1235_4_ + 1) - f3, d1, d2);
+            tessellator.func_983_a(p_1235_2_ + 0, (float)p_1235_3_ + f1 + f2, (float)(p_1235_4_ + 1) - f3, d1, d2);
+            tessellator.func_983_a(p_1235_2_ + 0, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 1 - 0, d1, d3);
+            tessellator.func_983_a(p_1235_2_ + 1, (float)(p_1235_3_ + 0) + f2, p_1235_4_ + 1 - 0, d0, d3);
+            tessellator.func_983_a(p_1235_2_ + 1, (float)p_1235_3_ + f1 + f2, (float)(p_1235_4_ + 1) - f3, d0, d2);
          }
 
          if (Block.field_402_as.func_261_b(this.field_1772_a, p_1235_2_, p_1235_3_ + 1, p_1235_4_)) {
@@ -330,38 +329,38 @@
             double d19 = (double)p_1235_2_ + 0.5D + 0.5D;
             double d20 = (double)p_1235_4_ + 0.5D - 0.5D;
             double d12 = (double)p_1235_4_ + 0.5D + 0.5D;
-            d0 = (double)((float)j / 256.0F);
-            d1 = (double)(((float)j + 15.99F) / 256.0F);
-            d2 = (double)((float)k / 256.0F);
-            d3 = (double)(((float)k + 15.99F) / 256.0F);
+            d0 = (float)j / 256.0F;
+            d1 = ((float)j + 15.99F) / 256.0F;
+            d2 = (float)k / 256.0F;
+            d3 = ((float)k + 15.99F) / 256.0F;
             ++p_1235_3_;
             f1 = -0.2F;
             if ((p_1235_2_ + p_1235_3_ + p_1235_4_ & 1) == 0) {
-               tessellator.func_983_a(d18, (double)((float)p_1235_3_ + f1), (double)(p_1235_4_ + 0), d1, d2);
-               tessellator.func_983_a(d14, (double)(p_1235_3_ + 0), (double)(p_1235_4_ + 0), d1, d3);
-               tessellator.func_983_a(d14, (double)(p_1235_3_ + 0), (double)(p_1235_4_ + 1), d0, d3);
-               tessellator.func_983_a(d18, (double)((float)p_1235_3_ + f1), (double)(p_1235_4_ + 1), d0, d2);
-               d0 = (double)((float)j / 256.0F);
-               d1 = (double)(((float)j + 15.99F) / 256.0F);
-               d2 = (double)((float)(k + 16) / 256.0F);
-               d3 = (double)(((float)k + 15.99F + 16.0F) / 256.0F);
-               tessellator.func_983_a(d19, (double)((float)p_1235_3_ + f1), (double)(p_1235_4_ + 1), d1, d2);
-               tessellator.func_983_a(d15, (double)(p_1235_3_ + 0), (double)(p_1235_4_ + 1), d1, d3);
-               tessellator.func_983_a(d15, (double)(p_1235_3_ + 0), (double)(p_1235_4_ + 0), d0, d3);
-               tessellator.func_983_a(d19, (double)((float)p_1235_3_ + f1), (double)(p_1235_4_ + 0), d0, d2);
+               tessellator.func_983_a(d18, (float)p_1235_3_ + f1, p_1235_4_ + 0, d1, d2);
+               tessellator.func_983_a(d14, p_1235_3_ + 0, p_1235_4_ + 0, d1, d3);
+               tessellator.func_983_a(d14, p_1235_3_ + 0, p_1235_4_ + 1, d0, d3);
+               tessellator.func_983_a(d18, (float)p_1235_3_ + f1, p_1235_4_ + 1, d0, d2);
+               d0 = (float)j / 256.0F;
+               d1 = ((float)j + 15.99F) / 256.0F;
+               d2 = (float)(k + 16) / 256.0F;
+               d3 = ((float)k + 15.99F + 16.0F) / 256.0F;
+               tessellator.func_983_a(d19, (float)p_1235_3_ + f1, p_1235_4_ + 1, d1, d2);
+               tessellator.func_983_a(d15, p_1235_3_ + 0, p_1235_4_ + 1, d1, d3);
+               tessellator.func_983_a(d15, p_1235_3_ + 0, p_1235_4_ + 0, d0, d3);
+               tessellator.func_983_a(d19, (float)p_1235_3_ + f1, p_1235_4_ + 0, d0, d2);
             } else {
-               tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)p_1235_3_ + f1), d12, d1, d2);
-               tessellator.func_983_a((double)(p_1235_2_ + 0), (double)(p_1235_3_ + 0), d17, d1, d3);
-               tessellator.func_983_a((double)(p_1235_2_ + 1), (double)(p_1235_3_ + 0), d17, d0, d3);
-               tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)p_1235_3_ + f1), d12, d0, d2);
-               d0 = (double)((float)j / 256.0F);
-               d1 = (double)(((float)j + 15.99F) / 256.0F);
-               d2 = (double)((float)(k + 16) / 256.0F);
-               d3 = (double)(((float)k + 15.99F + 16.0F) / 256.0F);
-               tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)p_1235_3_ + f1), d20, d1, d2);
-               tessellator.func_983_a((double)(p_1235_2_ + 1), (double)(p_1235_3_ + 0), d16, d1, d3);
-               tessellator.func_983_a((double)(p_1235_2_ + 0), (double)(p_1235_3_ + 0), d16, d0, d3);
-               tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)p_1235_3_ + f1), d20, d0, d2);
+               tessellator.func_983_a(p_1235_2_ + 0, (float)p_1235_3_ + f1, d12, d1, d2);
+               tessellator.func_983_a(p_1235_2_ + 0, p_1235_3_ + 0, d17, d1, d3);
+               tessellator.func_983_a(p_1235_2_ + 1, p_1235_3_ + 0, d17, d0, d3);
+               tessellator.func_983_a(p_1235_2_ + 1, (float)p_1235_3_ + f1, d12, d0, d2);
+               d0 = (float)j / 256.0F;
+               d1 = ((float)j + 15.99F) / 256.0F;
+               d2 = (float)(k + 16) / 256.0F;
+               d3 = ((float)k + 15.99F + 16.0F) / 256.0F;
+               tessellator.func_983_a(p_1235_2_ + 1, (float)p_1235_3_ + f1, d20, d1, d2);
+               tessellator.func_983_a(p_1235_2_ + 1, p_1235_3_ + 0, d16, d1, d3);
+               tessellator.func_983_a(p_1235_2_ + 0, p_1235_3_ + 0, d16, d0, d3);
+               tessellator.func_983_a(p_1235_2_ + 0, (float)p_1235_3_ + f1, d20, d0, d2);
             }
          }
       } else {
@@ -373,26 +372,26 @@
          double d9 = (double)p_1235_2_ + 0.5D + 0.3D;
          double d10 = (double)p_1235_4_ + 0.5D - 0.3D;
          double d11 = (double)p_1235_4_ + 0.5D + 0.3D;
-         tessellator.func_983_a(d8, (double)((float)p_1235_3_ + f1), (double)(p_1235_4_ + 1), d1, d2);
-         tessellator.func_983_a(d4, (double)(p_1235_3_ + 0), (double)(p_1235_4_ + 1), d1, d3);
-         tessellator.func_983_a(d4, (double)(p_1235_3_ + 0), (double)(p_1235_4_ + 0), d0, d3);
-         tessellator.func_983_a(d8, (double)((float)p_1235_3_ + f1), (double)(p_1235_4_ + 0), d0, d2);
-         tessellator.func_983_a(d9, (double)((float)p_1235_3_ + f1), (double)(p_1235_4_ + 0), d1, d2);
-         tessellator.func_983_a(d5, (double)(p_1235_3_ + 0), (double)(p_1235_4_ + 0), d1, d3);
-         tessellator.func_983_a(d5, (double)(p_1235_3_ + 0), (double)(p_1235_4_ + 1), d0, d3);
-         tessellator.func_983_a(d9, (double)((float)p_1235_3_ + f1), (double)(p_1235_4_ + 1), d0, d2);
-         d0 = (double)((float)j / 256.0F);
-         d1 = (double)(((float)j + 15.99F) / 256.0F);
-         d2 = (double)((float)(k + 16) / 256.0F);
-         d3 = (double)(((float)k + 15.99F + 16.0F) / 256.0F);
-         tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)p_1235_3_ + f1), d11, d1, d2);
-         tessellator.func_983_a((double)(p_1235_2_ + 1), (double)(p_1235_3_ + 0), d7, d1, d3);
-         tessellator.func_983_a((double)(p_1235_2_ + 0), (double)(p_1235_3_ + 0), d7, d0, d3);
-         tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)p_1235_3_ + f1), d11, d0, d2);
-         tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)p_1235_3_ + f1), d10, d1, d2);
-         tessellator.func_983_a((double)(p_1235_2_ + 0), (double)(p_1235_3_ + 0), d6, d1, d3);
-         tessellator.func_983_a((double)(p_1235_2_ + 1), (double)(p_1235_3_ + 0), d6, d0, d3);
-         tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)p_1235_3_ + f1), d10, d0, d2);
+         tessellator.func_983_a(d8, (float)p_1235_3_ + f1, p_1235_4_ + 1, d1, d2);
+         tessellator.func_983_a(d4, p_1235_3_ + 0, p_1235_4_ + 1, d1, d3);
+         tessellator.func_983_a(d4, p_1235_3_ + 0, p_1235_4_ + 0, d0, d3);
+         tessellator.func_983_a(d8, (float)p_1235_3_ + f1, p_1235_4_ + 0, d0, d2);
+         tessellator.func_983_a(d9, (float)p_1235_3_ + f1, p_1235_4_ + 0, d1, d2);
+         tessellator.func_983_a(d5, p_1235_3_ + 0, p_1235_4_ + 0, d1, d3);
+         tessellator.func_983_a(d5, p_1235_3_ + 0, p_1235_4_ + 1, d0, d3);
+         tessellator.func_983_a(d9, (float)p_1235_3_ + f1, p_1235_4_ + 1, d0, d2);
+         d0 = (float)j / 256.0F;
+         d1 = ((float)j + 15.99F) / 256.0F;
+         d2 = (float)(k + 16) / 256.0F;
+         d3 = ((float)k + 15.99F + 16.0F) / 256.0F;
+         tessellator.func_983_a(p_1235_2_ + 1, (float)p_1235_3_ + f1, d11, d1, d2);
+         tessellator.func_983_a(p_1235_2_ + 1, p_1235_3_ + 0, d7, d1, d3);
+         tessellator.func_983_a(p_1235_2_ + 0, p_1235_3_ + 0, d7, d0, d3);
+         tessellator.func_983_a(p_1235_2_ + 0, (float)p_1235_3_ + f1, d11, d0, d2);
+         tessellator.func_983_a(p_1235_2_ + 0, (float)p_1235_3_ + f1, d10, d1, d2);
+         tessellator.func_983_a(p_1235_2_ + 0, p_1235_3_ + 0, d6, d1, d3);
+         tessellator.func_983_a(p_1235_2_ + 1, p_1235_3_ + 0, d6, d0, d3);
+         tessellator.func_983_a(p_1235_2_ + 1, (float)p_1235_3_ + f1, d10, d0, d2);
          d4 = (double)p_1235_2_ + 0.5D - 0.5D;
          d5 = (double)p_1235_2_ + 0.5D + 0.5D;
          d6 = (double)p_1235_4_ + 0.5D - 0.5D;
@@ -401,26 +400,26 @@
          d9 = (double)p_1235_2_ + 0.5D + 0.4D;
          d10 = (double)p_1235_4_ + 0.5D - 0.4D;
          d11 = (double)p_1235_4_ + 0.5D + 0.4D;
-         tessellator.func_983_a(d8, (double)((float)p_1235_3_ + f1), (double)(p_1235_4_ + 0), d0, d2);
-         tessellator.func_983_a(d4, (double)(p_1235_3_ + 0), (double)(p_1235_4_ + 0), d0, d3);
-         tessellator.func_983_a(d4, (double)(p_1235_3_ + 0), (double)(p_1235_4_ + 1), d1, d3);
-         tessellator.func_983_a(d8, (double)((float)p_1235_3_ + f1), (double)(p_1235_4_ + 1), d1, d2);
-         tessellator.func_983_a(d9, (double)((float)p_1235_3_ + f1), (double)(p_1235_4_ + 1), d0, d2);
-         tessellator.func_983_a(d5, (double)(p_1235_3_ + 0), (double)(p_1235_4_ + 1), d0, d3);
-         tessellator.func_983_a(d5, (double)(p_1235_3_ + 0), (double)(p_1235_4_ + 0), d1, d3);
-         tessellator.func_983_a(d9, (double)((float)p_1235_3_ + f1), (double)(p_1235_4_ + 0), d1, d2);
-         d0 = (double)((float)j / 256.0F);
-         d1 = (double)(((float)j + 15.99F) / 256.0F);
-         d2 = (double)((float)k / 256.0F);
-         d3 = (double)(((float)k + 15.99F) / 256.0F);
-         tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)p_1235_3_ + f1), d11, d0, d2);
-         tessellator.func_983_a((double)(p_1235_2_ + 0), (double)(p_1235_3_ + 0), d7, d0, d3);
-         tessellator.func_983_a((double)(p_1235_2_ + 1), (double)(p_1235_3_ + 0), d7, d1, d3);
-         tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)p_1235_3_ + f1), d11, d1, d2);
-         tessellator.func_983_a((double)(p_1235_2_ + 1), (double)((float)p_1235_3_ + f1), d10, d0, d2);
-         tessellator.func_983_a((double)(p_1235_2_ + 1), (double)(p_1235_3_ + 0), d6, d0, d3);
-         tessellator.func_983_a((double)(p_1235_2_ + 0), (double)(p_1235_3_ + 0), d6, d1, d3);
-         tessellator.func_983_a((double)(p_1235_2_ + 0), (double)((float)p_1235_3_ + f1), d10, d1, d2);
+         tessellator.func_983_a(d8, (float)p_1235_3_ + f1, p_1235_4_ + 0, d0, d2);
+         tessellator.func_983_a(d4, p_1235_3_ + 0, p_1235_4_ + 0, d0, d3);
+         tessellator.func_983_a(d4, p_1235_3_ + 0, p_1235_4_ + 1, d1, d3);
+         tessellator.func_983_a(d8, (float)p_1235_3_ + f1, p_1235_4_ + 1, d1, d2);
+         tessellator.func_983_a(d9, (float)p_1235_3_ + f1, p_1235_4_ + 1, d0, d2);
+         tessellator.func_983_a(d5, p_1235_3_ + 0, p_1235_4_ + 1, d0, d3);
+         tessellator.func_983_a(d5, p_1235_3_ + 0, p_1235_4_ + 0, d1, d3);
+         tessellator.func_983_a(d9, (float)p_1235_3_ + f1, p_1235_4_ + 0, d1, d2);
+         d0 = (float)j / 256.0F;
+         d1 = ((float)j + 15.99F) / 256.0F;
+         d2 = (float)k / 256.0F;
+         d3 = ((float)k + 15.99F) / 256.0F;
+         tessellator.func_983_a(p_1235_2_ + 0, (float)p_1235_3_ + f1, d11, d0, d2);
+         tessellator.func_983_a(p_1235_2_ + 0, p_1235_3_ + 0, d7, d0, d3);
+         tessellator.func_983_a(p_1235_2_ + 1, p_1235_3_ + 0, d7, d1, d3);
+         tessellator.func_983_a(p_1235_2_ + 1, (float)p_1235_3_ + f1, d11, d1, d2);
+         tessellator.func_983_a(p_1235_2_ + 1, (float)p_1235_3_ + f1, d10, d0, d2);
+         tessellator.func_983_a(p_1235_2_ + 1, p_1235_3_ + 0, d6, d0, d3);
+         tessellator.func_983_a(p_1235_2_ + 0, p_1235_3_ + 0, d6, d1, d3);
+         tessellator.func_983_a(p_1235_2_ + 0, (float)p_1235_3_ + f1, d10, d1, d2);
       }
 
       return true;
@@ -437,10 +436,10 @@
       tessellator.func_987_a(f, f, f);
       int j = (i & 15) << 4;
       int k = i & 240;
-      double d0 = (double)((float)j / 256.0F);
-      double d1 = (double)(((float)j + 15.99F) / 256.0F);
-      double d2 = (double)((float)k / 256.0F);
-      double d3 = (double)(((float)k + 15.99F) / 256.0F);
+      double d0 = (float)j / 256.0F;
+      double d1 = ((float)j + 15.99F) / 256.0F;
+      double d2 = (float)k / 256.0F;
+      double d3 = ((float)k + 15.99F) / 256.0F;
       float f1 = 0.0F;
       float f2 = 0.03125F;
       boolean flag = BlockRedstoneWire.func_279_b(this.field_1772_a, p_1242_2_ - 1, p_1242_3_, p_1242_4_) || !this.field_1772_a.func_601_g(p_1242_2_ - 1, p_1242_3_, p_1242_4_) && BlockRedstoneWire.func_279_b(this.field_1772_a, p_1242_2_ - 1, p_1242_3_ - 1, p_1242_4_);
@@ -480,10 +479,10 @@
       }
 
       if (b0 != 0) {
-         d0 = (double)((float)(j + 16) / 256.0F);
-         d1 = (double)(((float)(j + 16) + 15.99F) / 256.0F);
-         d2 = (double)((float)k / 256.0F);
-         d3 = (double)(((float)k + 15.99F) / 256.0F);
+         d0 = (float)(j + 16) / 256.0F;
+         d1 = ((float)(j + 16) + 15.99F) / 256.0F;
+         d2 = (float)k / 256.0F;
+         d3 = ((float)k + 15.99F) / 256.0F;
       }
 
       if (b0 == 0) {
@@ -493,7 +492,7 @@
             }
 
             if (!flag) {
-               d0 += (double)(f3 / 16.0F);
+               d0 += f3 / 16.0F;
             }
 
             if (!flag1) {
@@ -501,7 +500,7 @@
             }
 
             if (!flag1) {
-               d1 -= (double)(f3 / 16.0F);
+               d1 -= f3 / 16.0F;
             }
 
             if (!flag2) {
@@ -509,7 +508,7 @@
             }
 
             if (!flag2) {
-               d2 += (double)(f3 / 16.0F);
+               d2 += f3 / 16.0F;
             }
 
             if (!flag3) {
@@ -517,61 +516,61 @@
             }
 
             if (!flag3) {
-               d3 -= (double)(f3 / 16.0F);
+               d3 -= f3 / 16.0F;
             }
          }
 
-         tessellator.func_983_a((double)(f5 + f1), (double)((float)p_1242_3_ + f2), (double)(f7 + f1), d1, d3);
-         tessellator.func_983_a((double)(f5 + f1), (double)((float)p_1242_3_ + f2), (double)(f6 - f1), d1, d2);
-         tessellator.func_983_a((double)(f4 - f1), (double)((float)p_1242_3_ + f2), (double)(f6 - f1), d0, d2);
-         tessellator.func_983_a((double)(f4 - f1), (double)((float)p_1242_3_ + f2), (double)(f7 + f1), d0, d3);
+         tessellator.func_983_a(f5 + f1, (float)p_1242_3_ + f2, f7 + f1, d1, d3);
+         tessellator.func_983_a(f5 + f1, (float)p_1242_3_ + f2, f6 - f1, d1, d2);
+         tessellator.func_983_a(f4 - f1, (float)p_1242_3_ + f2, f6 - f1, d0, d2);
+         tessellator.func_983_a(f4 - f1, (float)p_1242_3_ + f2, f7 + f1, d0, d3);
       }
 
       if (b0 == 1) {
-         tessellator.func_983_a((double)(f5 + f1), (double)((float)p_1242_3_ + f2), (double)(f7 + f1), d1, d3);
-         tessellator.func_983_a((double)(f5 + f1), (double)((float)p_1242_3_ + f2), (double)(f6 - f1), d1, d2);
-         tessellator.func_983_a((double)(f4 - f1), (double)((float)p_1242_3_ + f2), (double)(f6 - f1), d0, d2);
-         tessellator.func_983_a((double)(f4 - f1), (double)((float)p_1242_3_ + f2), (double)(f7 + f1), d0, d3);
+         tessellator.func_983_a(f5 + f1, (float)p_1242_3_ + f2, f7 + f1, d1, d3);
+         tessellator.func_983_a(f5 + f1, (float)p_1242_3_ + f2, f6 - f1, d1, d2);
+         tessellator.func_983_a(f4 - f1, (float)p_1242_3_ + f2, f6 - f1, d0, d2);
+         tessellator.func_983_a(f4 - f1, (float)p_1242_3_ + f2, f7 + f1, d0, d3);
       }
 
       if (b0 == 2) {
-         tessellator.func_983_a((double)(f5 + f1), (double)((float)p_1242_3_ + f2), (double)(f7 + f1), d1, d3);
-         tessellator.func_983_a((double)(f5 + f1), (double)((float)p_1242_3_ + f2), (double)(f6 - f1), d0, d3);
-         tessellator.func_983_a((double)(f4 - f1), (double)((float)p_1242_3_ + f2), (double)(f6 - f1), d0, d2);
-         tessellator.func_983_a((double)(f4 - f1), (double)((float)p_1242_3_ + f2), (double)(f7 + f1), d1, d2);
+         tessellator.func_983_a(f5 + f1, (float)p_1242_3_ + f2, f7 + f1, d1, d3);
+         tessellator.func_983_a(f5 + f1, (float)p_1242_3_ + f2, f6 - f1, d0, d3);
+         tessellator.func_983_a(f4 - f1, (float)p_1242_3_ + f2, f6 - f1, d0, d2);
+         tessellator.func_983_a(f4 - f1, (float)p_1242_3_ + f2, f7 + f1, d1, d2);
       }
 
-      d0 = (double)((float)(j + 16) / 256.0F);
-      d1 = (double)(((float)(j + 16) + 15.99F) / 256.0F);
-      d2 = (double)((float)k / 256.0F);
-      d3 = (double)(((float)k + 15.99F) / 256.0F);
+      d0 = (float)(j + 16) / 256.0F;
+      d1 = ((float)(j + 16) + 15.99F) / 256.0F;
+      d2 = (float)k / 256.0F;
+      d3 = ((float)k + 15.99F) / 256.0F;
       if (!this.field_1772_a.func_601_g(p_1242_2_, p_1242_3_ + 1, p_1242_4_)) {
          if (this.field_1772_a.func_601_g(p_1242_2_ - 1, p_1242_3_, p_1242_4_) && this.field_1772_a.func_600_a(p_1242_2_ - 1, p_1242_3_ + 1, p_1242_4_) == Block.field_394_aw.field_376_bc) {
-            tessellator.func_983_a((double)((float)p_1242_2_ + f2), (double)((float)(p_1242_3_ + 1) + f1), (double)((float)(p_1242_4_ + 1) + f1), d1, d2);
-            tessellator.func_983_a((double)((float)p_1242_2_ + f2), (double)((float)(p_1242_3_ + 0) - f1), (double)((float)(p_1242_4_ + 1) + f1), d0, d2);
-            tessellator.func_983_a((double)((float)p_1242_2_ + f2), (double)((float)(p_1242_3_ + 0) - f1), (double)((float)(p_1242_4_ + 0) - f1), d0, d3);
-            tessellator.func_983_a((double)((float)p_1242_2_ + f2), (double)((float)(p_1242_3_ + 1) + f1), (double)((float)(p_1242_4_ + 0) - f1), d1, d3);
+            tessellator.func_983_a((float)p_1242_2_ + f2, (float)(p_1242_3_ + 1) + f1, (float)(p_1242_4_ + 1) + f1, d1, d2);
+            tessellator.func_983_a((float)p_1242_2_ + f2, (float)(p_1242_3_ + 0) - f1, (float)(p_1242_4_ + 1) + f1, d0, d2);
+            tessellator.func_983_a((float)p_1242_2_ + f2, (float)(p_1242_3_ + 0) - f1, (float)(p_1242_4_ + 0) - f1, d0, d3);
+            tessellator.func_983_a((float)p_1242_2_ + f2, (float)(p_1242_3_ + 1) + f1, (float)(p_1242_4_ + 0) - f1, d1, d3);
          }
 
          if (this.field_1772_a.func_601_g(p_1242_2_ + 1, p_1242_3_, p_1242_4_) && this.field_1772_a.func_600_a(p_1242_2_ + 1, p_1242_3_ + 1, p_1242_4_) == Block.field_394_aw.field_376_bc) {
-            tessellator.func_983_a((double)((float)(p_1242_2_ + 1) - f2), (double)((float)(p_1242_3_ + 0) - f1), (double)((float)(p_1242_4_ + 1) + f1), d0, d3);
-            tessellator.func_983_a((double)((float)(p_1242_2_ + 1) - f2), (double)((float)(p_1242_3_ + 1) + f1), (double)((float)(p_1242_4_ + 1) + f1), d1, d3);
-            tessellator.func_983_a((double)((float)(p_1242_2_ + 1) - f2), (double)((float)(p_1242_3_ + 1) + f1), (double)((float)(p_1242_4_ + 0) - f1), d1, d2);
-            tessellator.func_983_a((double)((float)(p_1242_2_ + 1) - f2), (double)((float)(p_1242_3_ + 0) - f1), (double)((float)(p_1242_4_ + 0) - f1), d0, d2);
+            tessellator.func_983_a((float)(p_1242_2_ + 1) - f2, (float)(p_1242_3_ + 0) - f1, (float)(p_1242_4_ + 1) + f1, d0, d3);
+            tessellator.func_983_a((float)(p_1242_2_ + 1) - f2, (float)(p_1242_3_ + 1) + f1, (float)(p_1242_4_ + 1) + f1, d1, d3);
+            tessellator.func_983_a((float)(p_1242_2_ + 1) - f2, (float)(p_1242_3_ + 1) + f1, (float)(p_1242_4_ + 0) - f1, d1, d2);
+            tessellator.func_983_a((float)(p_1242_2_ + 1) - f2, (float)(p_1242_3_ + 0) - f1, (float)(p_1242_4_ + 0) - f1, d0, d2);
          }
 
          if (this.field_1772_a.func_601_g(p_1242_2_, p_1242_3_, p_1242_4_ - 1) && this.field_1772_a.func_600_a(p_1242_2_, p_1242_3_ + 1, p_1242_4_ - 1) == Block.field_394_aw.field_376_bc) {
-            tessellator.func_983_a((double)((float)(p_1242_2_ + 1) + f1), (double)((float)(p_1242_3_ + 0) - f1), (double)((float)p_1242_4_ + f2), d0, d3);
-            tessellator.func_983_a((double)((float)(p_1242_2_ + 1) + f1), (double)((float)(p_1242_3_ + 1) + f1), (double)((float)p_1242_4_ + f2), d1, d3);
-            tessellator.func_983_a((double)((float)(p_1242_2_ + 0) - f1), (double)((float)(p_1242_3_ + 1) + f1), (double)((float)p_1242_4_ + f2), d1, d2);
-            tessellator.func_983_a((double)((float)(p_1242_2_ + 0) - f1), (double)((float)(p_1242_3_ + 0) - f1), (double)((float)p_1242_4_ + f2), d0, d2);
+            tessellator.func_983_a((float)(p_1242_2_ + 1) + f1, (float)(p_1242_3_ + 0) - f1, (float)p_1242_4_ + f2, d0, d3);
+            tessellator.func_983_a((float)(p_1242_2_ + 1) + f1, (float)(p_1242_3_ + 1) + f1, (float)p_1242_4_ + f2, d1, d3);
+            tessellator.func_983_a((float)(p_1242_2_ + 0) - f1, (float)(p_1242_3_ + 1) + f1, (float)p_1242_4_ + f2, d1, d2);
+            tessellator.func_983_a((float)(p_1242_2_ + 0) - f1, (float)(p_1242_3_ + 0) - f1, (float)p_1242_4_ + f2, d0, d2);
          }
 
          if (this.field_1772_a.func_601_g(p_1242_2_, p_1242_3_, p_1242_4_ + 1) && this.field_1772_a.func_600_a(p_1242_2_, p_1242_3_ + 1, p_1242_4_ + 1) == Block.field_394_aw.field_376_bc) {
-            tessellator.func_983_a((double)((float)(p_1242_2_ + 1) + f1), (double)((float)(p_1242_3_ + 1) + f1), (double)((float)(p_1242_4_ + 1) - f2), d1, d2);
-            tessellator.func_983_a((double)((float)(p_1242_2_ + 1) + f1), (double)((float)(p_1242_3_ + 0) - f1), (double)((float)(p_1242_4_ + 1) - f2), d0, d2);
-            tessellator.func_983_a((double)((float)(p_1242_2_ + 0) - f1), (double)((float)(p_1242_3_ + 0) - f1), (double)((float)(p_1242_4_ + 1) - f2), d0, d3);
-            tessellator.func_983_a((double)((float)(p_1242_2_ + 0) - f1), (double)((float)(p_1242_3_ + 1) + f1), (double)((float)(p_1242_4_ + 1) - f2), d1, d3);
+            tessellator.func_983_a((float)(p_1242_2_ + 1) + f1, (float)(p_1242_3_ + 1) + f1, (float)(p_1242_4_ + 1) - f2, d1, d2);
+            tessellator.func_983_a((float)(p_1242_2_ + 1) + f1, (float)(p_1242_3_ + 0) - f1, (float)(p_1242_4_ + 1) - f2, d0, d2);
+            tessellator.func_983_a((float)(p_1242_2_ + 0) - f1, (float)(p_1242_3_ + 0) - f1, (float)(p_1242_4_ + 1) - f2, d0, d3);
+            tessellator.func_983_a((float)(p_1242_2_ + 0) - f1, (float)(p_1242_3_ + 1) + f1, (float)(p_1242_4_ + 1) - f2, d1, d3);
          }
       }
 
@@ -590,10 +589,10 @@
       tessellator.func_987_a(f, f, f);
       int k = (j & 15) << 4;
       int l = j & 240;
-      double d0 = (double)((float)k / 256.0F);
-      double d1 = (double)(((float)k + 15.99F) / 256.0F);
-      double d2 = (double)((float)l / 256.0F);
-      double d3 = (double)(((float)l + 15.99F) / 256.0F);
+      double d0 = (float)k / 256.0F;
+      double d1 = ((float)k + 15.99F) / 256.0F;
+      double d2 = (float)l / 256.0F;
+      double d3 = ((float)l + 15.99F) / 256.0F;
       float f1 = 0.0625F;
       float f2 = (float)(p_1216_2_ + 1);
       float f3 = (float)(p_1216_2_ + 1);
@@ -636,14 +635,14 @@
          ++f13;
       }
 
-      tessellator.func_983_a((double)f2, (double)f10, (double)f6, d1, d2);
-      tessellator.func_983_a((double)f3, (double)f11, (double)f7, d1, d3);
-      tessellator.func_983_a((double)f4, (double)f12, (double)f8, d0, d3);
-      tessellator.func_983_a((double)f5, (double)f13, (double)f9, d0, d2);
-      tessellator.func_983_a((double)f5, (double)f13, (double)f9, d0, d2);
-      tessellator.func_983_a((double)f4, (double)f12, (double)f8, d0, d3);
-      tessellator.func_983_a((double)f3, (double)f11, (double)f7, d1, d3);
-      tessellator.func_983_a((double)f2, (double)f10, (double)f6, d1, d2);
+      tessellator.func_983_a(f2, f10, f6, d1, d2);
+      tessellator.func_983_a(f3, f11, f7, d1, d3);
+      tessellator.func_983_a(f4, f12, f8, d0, d3);
+      tessellator.func_983_a(f5, f13, f9, d0, d2);
+      tessellator.func_983_a(f5, f13, f9, d0, d2);
+      tessellator.func_983_a(f4, f12, f8, d0, d3);
+      tessellator.func_983_a(f3, f11, f7, d1, d3);
+      tessellator.func_983_a(f2, f10, f6, d1, d2);
       return true;
    }
 
@@ -658,39 +657,39 @@
       tessellator.func_987_a(f, f, f);
       int j = (i & 15) << 4;
       int k = i & 240;
-      double d0 = (double)((float)j / 256.0F);
-      double d1 = (double)(((float)j + 15.99F) / 256.0F);
-      double d2 = (double)((float)k / 256.0F);
-      double d3 = (double)(((float)k + 15.99F) / 256.0F);
+      double d0 = (float)j / 256.0F;
+      double d1 = ((float)j + 15.99F) / 256.0F;
+      double d2 = (float)k / 256.0F;
+      double d3 = ((float)k + 15.99F) / 256.0F;
       int l = this.field_1772_a.func_602_e(p_1221_2_, p_1221_3_, p_1221_4_);
       float f1 = 0.0F;
       float f2 = 0.05F;
       if (l == 5) {
-         tessellator.func_983_a((double)((float)p_1221_2_ + f2), (double)((float)(p_1221_3_ + 1) + f1), (double)((float)(p_1221_4_ + 1) + f1), d0, d2);
-         tessellator.func_983_a((double)((float)p_1221_2_ + f2), (double)((float)(p_1221_3_ + 0) - f1), (double)((float)(p_1221_4_ + 1) + f1), d0, d3);
-         tessellator.func_983_a((double)((float)p_1221_2_ + f2), (double)((float)(p_1221_3_ + 0) - f1), (double)((float)(p_1221_4_ + 0) - f1), d1, d3);
-         tessellator.func_983_a((double)((float)p_1221_2_ + f2), (double)((float)(p_1221_3_ + 1) + f1), (double)((float)(p_1221_4_ + 0) - f1), d1, d2);
+         tessellator.func_983_a((float)p_1221_2_ + f2, (float)(p_1221_3_ + 1) + f1, (float)(p_1221_4_ + 1) + f1, d0, d2);
+         tessellator.func_983_a((float)p_1221_2_ + f2, (float)(p_1221_3_ + 0) - f1, (float)(p_1221_4_ + 1) + f1, d0, d3);
+         tessellator.func_983_a((float)p_1221_2_ + f2, (float)(p_1221_3_ + 0) - f1, (float)(p_1221_4_ + 0) - f1, d1, d3);
+         tessellator.func_983_a((float)p_1221_2_ + f2, (float)(p_1221_3_ + 1) + f1, (float)(p_1221_4_ + 0) - f1, d1, d2);
       }
 
       if (l == 4) {
-         tessellator.func_983_a((double)((float)(p_1221_2_ + 1) - f2), (double)((float)(p_1221_3_ + 0) - f1), (double)((float)(p_1221_4_ + 1) + f1), d1, d3);
-         tessellator.func_983_a((double)((float)(p_1221_2_ + 1) - f2), (double)((float)(p_1221_3_ + 1) + f1), (double)((float)(p_1221_4_ + 1) + f1), d1, d2);
-         tessellator.func_983_a((double)((float)(p_1221_2_ + 1) - f2), (double)((float)(p_1221_3_ + 1) + f1), (double)((float)(p_1221_4_ + 0) - f1), d0, d2);
-         tessellator.func_983_a((double)((float)(p_1221_2_ + 1) - f2), (double)((float)(p_1221_3_ + 0) - f1), (double)((float)(p_1221_4_ + 0) - f1), d0, d3);
+         tessellator.func_983_a((float)(p_1221_2_ + 1) - f2, (float)(p_1221_3_ + 0) - f1, (float)(p_1221_4_ + 1) + f1, d1, d3);
+         tessellator.func_983_a((float)(p_1221_2_ + 1) - f2, (float)(p_1221_3_ + 1) + f1, (float)(p_1221_4_ + 1) + f1, d1, d2);
+         tessellator.func_983_a((float)(p_1221_2_ + 1) - f2, (float)(p_1221_3_ + 1) + f1, (float)(p_1221_4_ + 0) - f1, d0, d2);
+         tessellator.func_983_a((float)(p_1221_2_ + 1) - f2, (float)(p_1221_3_ + 0) - f1, (float)(p_1221_4_ + 0) - f1, d0, d3);
       }
 
       if (l == 3) {
-         tessellator.func_983_a((double)((float)(p_1221_2_ + 1) + f1), (double)((float)(p_1221_3_ + 0) - f1), (double)((float)p_1221_4_ + f2), d1, d3);
-         tessellator.func_983_a((double)((float)(p_1221_2_ + 1) + f1), (double)((float)(p_1221_3_ + 1) + f1), (double)((float)p_1221_4_ + f2), d1, d2);
-         tessellator.func_983_a((double)((float)(p_1221_2_ + 0) - f1), (double)((float)(p_1221_3_ + 1) + f1), (double)((float)p_1221_4_ + f2), d0, d2);
-         tessellator.func_983_a((double)((float)(p_1221_2_ + 0) - f1), (double)((float)(p_1221_3_ + 0) - f1), (double)((float)p_1221_4_ + f2), d0, d3);
+         tessellator.func_983_a((float)(p_1221_2_ + 1) + f1, (float)(p_1221_3_ + 0) - f1, (float)p_1221_4_ + f2, d1, d3);
+         tessellator.func_983_a((float)(p_1221_2_ + 1) + f1, (float)(p_1221_3_ + 1) + f1, (float)p_1221_4_ + f2, d1, d2);
+         tessellator.func_983_a((float)(p_1221_2_ + 0) - f1, (float)(p_1221_3_ + 1) + f1, (float)p_1221_4_ + f2, d0, d2);
+         tessellator.func_983_a((float)(p_1221_2_ + 0) - f1, (float)(p_1221_3_ + 0) - f1, (float)p_1221_4_ + f2, d0, d3);
       }
 
       if (l == 2) {
-         tessellator.func_983_a((double)((float)(p_1221_2_ + 1) + f1), (double)((float)(p_1221_3_ + 1) + f1), (double)((float)(p_1221_4_ + 1) - f2), d0, d2);
-         tessellator.func_983_a((double)((float)(p_1221_2_ + 1) + f1), (double)((float)(p_1221_3_ + 0) - f1), (double)((float)(p_1221_4_ + 1) - f2), d0, d3);
-         tessellator.func_983_a((double)((float)(p_1221_2_ + 0) - f1), (double)((float)(p_1221_3_ + 0) - f1), (double)((float)(p_1221_4_ + 1) - f2), d1, d3);
-         tessellator.func_983_a((double)((float)(p_1221_2_ + 0) - f1), (double)((float)(p_1221_3_ + 1) + f1), (double)((float)(p_1221_4_ + 1) - f2), d1, d2);
+         tessellator.func_983_a((float)(p_1221_2_ + 1) + f1, (float)(p_1221_3_ + 1) + f1, (float)(p_1221_4_ + 1) - f2, d0, d2);
+         tessellator.func_983_a((float)(p_1221_2_ + 1) + f1, (float)(p_1221_3_ + 0) - f1, (float)(p_1221_4_ + 1) - f2, d0, d3);
+         tessellator.func_983_a((float)(p_1221_2_ + 0) - f1, (float)(p_1221_3_ + 0) - f1, (float)(p_1221_4_ + 1) - f2, d1, d3);
+         tessellator.func_983_a((float)(p_1221_2_ + 0) - f1, (float)(p_1221_3_ + 1) + f1, (float)(p_1221_4_ + 1) - f2, d1, d2);
       }
 
       return true;
@@ -700,7 +699,7 @@
       Tessellator tessellator = Tessellator.field_1512_a;
       float f = p_1226_1_.func_241_c(this.field_1772_a, p_1226_2_, p_1226_3_, p_1226_4_);
       tessellator.func_987_a(f, f, f);
-      this.func_1239_a(p_1226_1_, this.field_1772_a.func_602_e(p_1226_2_, p_1226_3_, p_1226_4_), (double)p_1226_2_, (double)p_1226_3_, (double)p_1226_4_);
+      this.func_1239_a(p_1226_1_, this.field_1772_a.func_602_e(p_1226_2_, p_1226_3_, p_1226_4_), p_1226_2_, p_1226_3_, p_1226_4_);
       return true;
    }
 
@@ -708,7 +707,7 @@
       Tessellator tessellator = Tessellator.field_1512_a;
       float f = p_1232_1_.func_241_c(this.field_1772_a, p_1232_2_, p_1232_3_, p_1232_4_);
       tessellator.func_987_a(f, f, f);
-      this.func_1245_b(p_1232_1_, this.field_1772_a.func_602_e(p_1232_2_, p_1232_3_, p_1232_4_), (double)p_1232_2_, (double)((float)p_1232_3_ - 0.0625F), (double)p_1232_4_);
+      this.func_1245_b(p_1232_1_, this.field_1772_a.func_602_e(p_1232_2_, p_1232_3_, p_1232_4_), p_1232_2_, (float)p_1232_3_ - 0.0625F, p_1232_4_);
       return true;
    }
 
@@ -741,22 +740,22 @@
       tessellator.func_983_a(p_1237_2_ + p_1237_8_ * (1.0D - d9) - d8, p_1237_4_ + d9, p_1237_6_ + p_1237_10_ * (1.0D - d9) + d8, d0, d3);
       tessellator.func_983_a(p_1237_2_ + p_1237_8_ * (1.0D - d9) + d8, p_1237_4_ + d9, p_1237_6_ + p_1237_10_ * (1.0D - d9) + d8, d2, d3);
       tessellator.func_983_a(p_1237_2_ + p_1237_8_ * (1.0D - d9) + d8, p_1237_4_ + d9, p_1237_6_ + p_1237_10_ * (1.0D - d9) - d8, d2, d1);
-      tessellator.func_983_a(p_1237_2_ - d8, p_1237_4_ + 1.0D, d6, (double)f, (double)f2);
-      tessellator.func_983_a(p_1237_2_ - d8 + p_1237_8_, p_1237_4_ + 0.0D, d6 + p_1237_10_, (double)f, (double)f3);
-      tessellator.func_983_a(p_1237_2_ - d8 + p_1237_8_, p_1237_4_ + 0.0D, d7 + p_1237_10_, (double)f1, (double)f3);
-      tessellator.func_983_a(p_1237_2_ - d8, p_1237_4_ + 1.0D, d7, (double)f1, (double)f2);
-      tessellator.func_983_a(p_1237_2_ + d8, p_1237_4_ + 1.0D, d7, (double)f, (double)f2);
-      tessellator.func_983_a(p_1237_2_ + p_1237_8_ + d8, p_1237_4_ + 0.0D, d7 + p_1237_10_, (double)f, (double)f3);
-      tessellator.func_983_a(p_1237_2_ + p_1237_8_ + d8, p_1237_4_ + 0.0D, d6 + p_1237_10_, (double)f1, (double)f3);
-      tessellator.func_983_a(p_1237_2_ + d8, p_1237_4_ + 1.0D, d6, (double)f1, (double)f2);
-      tessellator.func_983_a(d4, p_1237_4_ + 1.0D, p_1237_6_ + d8, (double)f, (double)f2);
-      tessellator.func_983_a(d4 + p_1237_8_, p_1237_4_ + 0.0D, p_1237_6_ + d8 + p_1237_10_, (double)f, (double)f3);
-      tessellator.func_983_a(d5 + p_1237_8_, p_1237_4_ + 0.0D, p_1237_6_ + d8 + p_1237_10_, (double)f1, (double)f3);
-      tessellator.func_983_a(d5, p_1237_4_ + 1.0D, p_1237_6_ + d8, (double)f1, (double)f2);
-      tessellator.func_983_a(d5, p_1237_4_ + 1.0D, p_1237_6_ - d8, (double)f, (double)f2);
-      tessellator.func_983_a(d5 + p_1237_8_, p_1237_4_ + 0.0D, p_1237_6_ - d8 + p_1237_10_, (double)f, (double)f3);
-      tessellator.func_983_a(d4 + p_1237_8_, p_1237_4_ + 0.0D, p_1237_6_ - d8 + p_1237_10_, (double)f1, (double)f3);
-      tessellator.func_983_a(d4, p_1237_4_ + 1.0D, p_1237_6_ - d8, (double)f1, (double)f2);
+      tessellator.func_983_a(p_1237_2_ - d8, p_1237_4_ + 1.0D, d6, f, f2);
+      tessellator.func_983_a(p_1237_2_ - d8 + p_1237_8_, p_1237_4_ + 0.0D, d6 + p_1237_10_, f, f3);
+      tessellator.func_983_a(p_1237_2_ - d8 + p_1237_8_, p_1237_4_ + 0.0D, d7 + p_1237_10_, f1, f3);
+      tessellator.func_983_a(p_1237_2_ - d8, p_1237_4_ + 1.0D, d7, f1, f2);
+      tessellator.func_983_a(p_1237_2_ + d8, p_1237_4_ + 1.0D, d7, f, f2);
+      tessellator.func_983_a(p_1237_2_ + p_1237_8_ + d8, p_1237_4_ + 0.0D, d7 + p_1237_10_, f, f3);
+      tessellator.func_983_a(p_1237_2_ + p_1237_8_ + d8, p_1237_4_ + 0.0D, d6 + p_1237_10_, f1, f3);
+      tessellator.func_983_a(p_1237_2_ + d8, p_1237_4_ + 1.0D, d6, f1, f2);
+      tessellator.func_983_a(d4, p_1237_4_ + 1.0D, p_1237_6_ + d8, f, f2);
+      tessellator.func_983_a(d4 + p_1237_8_, p_1237_4_ + 0.0D, p_1237_6_ + d8 + p_1237_10_, f, f3);
+      tessellator.func_983_a(d5 + p_1237_8_, p_1237_4_ + 0.0D, p_1237_6_ + d8 + p_1237_10_, f1, f3);
+      tessellator.func_983_a(d5, p_1237_4_ + 1.0D, p_1237_6_ + d8, f1, f2);
+      tessellator.func_983_a(d5, p_1237_4_ + 1.0D, p_1237_6_ - d8, f, f2);
+      tessellator.func_983_a(d5 + p_1237_8_, p_1237_4_ + 0.0D, p_1237_6_ - d8 + p_1237_10_, f, f3);
+      tessellator.func_983_a(d4 + p_1237_8_, p_1237_4_ + 0.0D, p_1237_6_ - d8 + p_1237_10_, f1, f3);
+      tessellator.func_983_a(d4, p_1237_4_ + 1.0D, p_1237_6_ - d8, f1, f2);
    }
 
    public void func_1239_a(Block p_1239_1_, int p_1239_2_, double p_1239_3_, double p_1239_5_, double p_1239_7_) {
@@ -768,10 +767,10 @@
 
       int j = (i & 15) << 4;
       int k = i & 240;
-      double d0 = (double)((float)j / 256.0F);
-      double d1 = (double)(((float)j + 15.99F) / 256.0F);
-      double d2 = (double)((float)k / 256.0F);
-      double d3 = (double)(((float)k + 15.99F) / 256.0F);
+      double d0 = (float)j / 256.0F;
+      double d1 = ((float)j + 15.99F) / 256.0F;
+      double d2 = (float)k / 256.0F;
+      double d3 = ((float)k + 15.99F) / 256.0F;
       double d4 = p_1239_3_ + 0.5D - (double)0.45F;
       double d5 = p_1239_3_ + 0.5D + (double)0.45F;
       double d6 = p_1239_7_ + 0.5D - (double)0.45F;
@@ -803,10 +802,10 @@
 
       int j = (i & 15) << 4;
       int k = i & 240;
-      double d0 = (double)((float)j / 256.0F);
-      double d1 = (double)(((float)j + 15.99F) / 256.0F);
-      double d2 = (double)((float)k / 256.0F);
-      double d3 = (double)(((float)k + 15.99F) / 256.0F);
+      double d0 = (float)j / 256.0F;
+      double d1 = ((float)j + 15.99F) / 256.0F;
+      double d2 = (float)k / 256.0F;
+      double d3 = ((float)k + 15.99F) / 256.0F;
       double d4 = p_1245_3_ + 0.5D - 0.25D;
       double d5 = p_1245_3_ + 0.5D + 0.25D;
       double d6 = p_1245_7_ + 0.5D - 0.5D;
@@ -885,24 +884,24 @@
             if (f8 < -999.0F) {
                f8 = 0.0F;
             } else {
-               d2 = (double)((float)(k + 16) / 256.0F);
-               d3 = (double)((float)(l + 16) / 256.0F);
+               d2 = (float)(k + 16) / 256.0F;
+               d3 = (float)(l + 16) / 256.0F;
             }
 
             float f10 = MathHelper.func_1106_a(f8) * 8.0F / 256.0F;
             float f11 = MathHelper.func_1114_b(f8) * 8.0F / 256.0F;
             float f12 = p_1222_1_.func_241_c(this.field_1772_a, p_1222_2_, p_1222_3_, p_1222_4_);
             tessellator.func_987_a(f1 * f12, f1 * f12, f1 * f12);
-            tessellator.func_983_a((double)(p_1222_2_ + 0), (double)((float)p_1222_3_ + f4), (double)(p_1222_4_ + 0), d2 - (double)f11 - (double)f10, d3 - (double)f11 + (double)f10);
-            tessellator.func_983_a((double)(p_1222_2_ + 0), (double)((float)p_1222_3_ + f5), (double)(p_1222_4_ + 1), d2 - (double)f11 + (double)f10, d3 + (double)f11 + (double)f10);
-            tessellator.func_983_a((double)(p_1222_2_ + 1), (double)((float)p_1222_3_ + f6), (double)(p_1222_4_ + 1), d2 + (double)f11 + (double)f10, d3 + (double)f11 - (double)f10);
-            tessellator.func_983_a((double)(p_1222_2_ + 1), (double)((float)p_1222_3_ + f7), (double)(p_1222_4_ + 0), d2 + (double)f11 - (double)f10, d3 - (double)f11 - (double)f10);
+            tessellator.func_983_a(p_1222_2_ + 0, (float)p_1222_3_ + f4, p_1222_4_ + 0, d2 - (double)f11 - (double)f10, d3 - (double)f11 + (double)f10);
+            tessellator.func_983_a(p_1222_2_ + 0, (float)p_1222_3_ + f5, p_1222_4_ + 1, d2 - (double)f11 + (double)f10, d3 + (double)f11 + (double)f10);
+            tessellator.func_983_a(p_1222_2_ + 1, (float)p_1222_3_ + f6, p_1222_4_ + 1, d2 + (double)f11 + (double)f10, d3 + (double)f11 - (double)f10);
+            tessellator.func_983_a(p_1222_2_ + 1, (float)p_1222_3_ + f7, p_1222_4_ + 0, d2 + (double)f11 - (double)f10, d3 - (double)f11 - (double)f10);
          }
 
          if (this.field_1773_d || flag1) {
             float f16 = p_1222_1_.func_241_c(this.field_1772_a, p_1222_2_, p_1222_3_ - 1, p_1222_4_);
             tessellator.func_987_a(f * f16, f * f16, f * f16);
-            this.func_1244_a(p_1222_1_, (double)p_1222_2_, (double)p_1222_3_, (double)p_1222_4_, p_1222_1_.func_218_a(0));
+            this.func_1244_a(p_1222_1_, p_1222_2_, p_1222_3_, p_1222_4_, p_1222_1_.func_218_a(0));
             flag2 = true;
          }
 
@@ -966,10 +965,10 @@
                }
 
                flag2 = true;
-               double d4 = (double)((float)(i1 + 0) / 256.0F);
+               double d4 = (float)(i1 + 0) / 256.0F;
                double d5 = ((double)(i1 + 16) - 0.01D) / 256.0D;
-               double d6 = (double)(((float)j2 + (1.0F - f9) * 16.0F) / 256.0F);
-               double d7 = (double)(((float)j2 + (1.0F - f17) * 16.0F) / 256.0F);
+               double d6 = ((float)j2 + (1.0F - f9) * 16.0F) / 256.0F;
+               double d7 = ((float)j2 + (1.0F - f17) * 16.0F) / 256.0F;
                double d8 = ((double)(j2 + 16) - 0.01D) / 256.0D;
                float f15 = p_1222_1_.func_241_c(this.field_1772_a, k1, p_1222_3_, l1);
                if (j1 < 2) {
@@ -979,10 +978,10 @@
                }
 
                tessellator.func_987_a(f1 * f15, f1 * f15, f1 * f15);
-               tessellator.func_983_a((double)f18, (double)((float)p_1222_3_ + f9), (double)f19, d4, d6);
-               tessellator.func_983_a((double)f13, (double)((float)p_1222_3_ + f17), (double)f14, d5, d7);
-               tessellator.func_983_a((double)f13, (double)(p_1222_3_ + 0), (double)f14, d5, d8);
-               tessellator.func_983_a((double)f18, (double)(p_1222_3_ + 0), (double)f19, d4, d8);
+               tessellator.func_983_a(f18, (float)p_1222_3_ + f9, f19, d4, d6);
+               tessellator.func_983_a(f13, (float)p_1222_3_ + f17, f14, d5, d7);
+               tessellator.func_983_a(f13, p_1222_3_ + 0, f14, d5, d8);
+               tessellator.func_983_a(f18, p_1222_3_ + 0, f19, d4, d8);
             }
          }
 
@@ -1114,7 +1113,7 @@
       if (this.field_1773_d || p_4152_1_.func_260_c(this.field_1772_a, p_4152_2_, p_4152_3_ - 1, p_4152_4_, 0)) {
          float f17 = p_4152_1_.func_241_c(this.field_1772_a, p_4152_2_, p_4152_3_ - 1, p_4152_4_);
          tessellator.func_987_a(f7 * f17, f10 * f17, f13 * f17);
-         this.func_1244_a(p_4152_1_, (double)p_4152_2_, (double)p_4152_3_, (double)p_4152_4_, p_4152_1_.func_211_a(this.field_1772_a, p_4152_2_, p_4152_3_, p_4152_4_, 0));
+         this.func_1244_a(p_4152_1_, p_4152_2_, p_4152_3_, p_4152_4_, p_4152_1_.func_211_a(this.field_1772_a, p_4152_2_, p_4152_3_, p_4152_4_, 0));
          flag = true;
       }
 
@@ -1125,7 +1124,7 @@
          }
 
          tessellator.func_987_a(f4 * f18, f5 * f18, f6 * f18);
-         this.func_1217_b(p_4152_1_, (double)p_4152_2_, (double)p_4152_3_, (double)p_4152_4_, p_4152_1_.func_211_a(this.field_1772_a, p_4152_2_, p_4152_3_, p_4152_4_, 1));
+         this.func_1217_b(p_4152_1_, p_4152_2_, p_4152_3_, p_4152_4_, p_4152_1_.func_211_a(this.field_1772_a, p_4152_2_, p_4152_3_, p_4152_4_, 1));
          flag = true;
       }
 
@@ -1136,7 +1135,7 @@
          }
 
          tessellator.func_987_a(f8 * f19, f11 * f19, f14 * f19);
-         this.func_1220_c(p_4152_1_, (double)p_4152_2_, (double)p_4152_3_, (double)p_4152_4_, p_4152_1_.func_211_a(this.field_1772_a, p_4152_2_, p_4152_3_, p_4152_4_, 2));
+         this.func_1220_c(p_4152_1_, p_4152_2_, p_4152_3_, p_4152_4_, p_4152_1_.func_211_a(this.field_1772_a, p_4152_2_, p_4152_3_, p_4152_4_, 2));
          flag = true;
       }
 
@@ -1147,7 +1146,7 @@
          }
 
          tessellator.func_987_a(f8 * f20, f11 * f20, f14 * f20);
-         this.func_1225_d(p_4152_1_, (double)p_4152_2_, (double)p_4152_3_, (double)p_4152_4_, p_4152_1_.func_211_a(this.field_1772_a, p_4152_2_, p_4152_3_, p_4152_4_, 3));
+         this.func_1225_d(p_4152_1_, p_4152_2_, p_4152_3_, p_4152_4_, p_4152_1_.func_211_a(this.field_1772_a, p_4152_2_, p_4152_3_, p_4152_4_, 3));
          flag = true;
       }
 
@@ -1158,7 +1157,7 @@
          }
 
          tessellator.func_987_a(f9 * f21, f12 * f21, f15 * f21);
-         this.func_1231_e(p_4152_1_, (double)p_4152_2_, (double)p_4152_3_, (double)p_4152_4_, p_4152_1_.func_211_a(this.field_1772_a, p_4152_2_, p_4152_3_, p_4152_4_, 4));
+         this.func_1231_e(p_4152_1_, p_4152_2_, p_4152_3_, p_4152_4_, p_4152_1_.func_211_a(this.field_1772_a, p_4152_2_, p_4152_3_, p_4152_4_, 4));
          flag = true;
       }
 
@@ -1169,7 +1168,7 @@
          }
 
          tessellator.func_987_a(f9 * f22, f12 * f22, f15 * f22);
-         this.func_1236_f(p_4152_1_, (double)p_4152_2_, (double)p_4152_3_, (double)p_4152_4_, p_4152_1_.func_211_a(this.field_1772_a, p_4152_2_, p_4152_3_, p_4152_4_, 5));
+         this.func_1236_f(p_4152_1_, p_4152_2_, p_4152_3_, p_4152_4_, p_4152_1_.func_211_a(this.field_1772_a, p_4152_2_, p_4152_3_, p_4152_4_, 5));
          flag = true;
       }
 
@@ -1208,7 +1207,7 @@
       if (this.field_1773_d || p_1230_1_.func_260_c(this.field_1772_a, p_1230_2_, p_1230_3_ - 1, p_1230_4_, 0)) {
          float f18 = p_1230_1_.func_241_c(this.field_1772_a, p_1230_2_, p_1230_3_ - 1, p_1230_4_);
          tessellator.func_987_a(f4 * f18, f8 * f18, f12 * f18);
-         this.func_1244_a(p_1230_1_, (double)p_1230_2_, (double)p_1230_3_, (double)p_1230_4_, p_1230_1_.func_211_a(this.field_1772_a, p_1230_2_, p_1230_3_, p_1230_4_, 0));
+         this.func_1244_a(p_1230_1_, p_1230_2_, p_1230_3_, p_1230_4_, p_1230_1_.func_211_a(this.field_1772_a, p_1230_2_, p_1230_3_, p_1230_4_, 0));
          flag = true;
       }
 
@@ -1219,7 +1218,7 @@
          }
 
          tessellator.func_987_a(f5 * f19, f9 * f19, f13 * f19);
-         this.func_1217_b(p_1230_1_, (double)p_1230_2_, (double)p_1230_3_, (double)p_1230_4_, p_1230_1_.func_211_a(this.field_1772_a, p_1230_2_, p_1230_3_, p_1230_4_, 1));
+         this.func_1217_b(p_1230_1_, p_1230_2_, p_1230_3_, p_1230_4_, p_1230_1_.func_211_a(this.field_1772_a, p_1230_2_, p_1230_3_, p_1230_4_, 1));
          flag = true;
       }
 
@@ -1231,7 +1230,7 @@
 
          tessellator.func_987_a(f6 * f20, f10 * f20, f14 * f20);
          tessellator.func_988_c(0.0F, 0.0F, f16);
-         this.func_1220_c(p_1230_1_, (double)p_1230_2_, (double)p_1230_3_, (double)p_1230_4_, p_1230_1_.func_211_a(this.field_1772_a, p_1230_2_, p_1230_3_, p_1230_4_, 2));
+         this.func_1220_c(p_1230_1_, p_1230_2_, p_1230_3_, p_1230_4_, p_1230_1_.func_211_a(this.field_1772_a, p_1230_2_, p_1230_3_, p_1230_4_, 2));
          tessellator.func_988_c(0.0F, 0.0F, -f16);
          flag = true;
       }
@@ -1244,7 +1243,7 @@
 
          tessellator.func_987_a(f6 * f21, f10 * f21, f14 * f21);
          tessellator.func_988_c(0.0F, 0.0F, -f16);
-         this.func_1225_d(p_1230_1_, (double)p_1230_2_, (double)p_1230_3_, (double)p_1230_4_, p_1230_1_.func_211_a(this.field_1772_a, p_1230_2_, p_1230_3_, p_1230_4_, 3));
+         this.func_1225_d(p_1230_1_, p_1230_2_, p_1230_3_, p_1230_4_, p_1230_1_.func_211_a(this.field_1772_a, p_1230_2_, p_1230_3_, p_1230_4_, 3));
          tessellator.func_988_c(0.0F, 0.0F, f16);
          flag = true;
       }
@@ -1257,7 +1256,7 @@
 
          tessellator.func_987_a(f7 * f22, f11 * f22, f15 * f22);
          tessellator.func_988_c(f16, 0.0F, 0.0F);
-         this.func_1231_e(p_1230_1_, (double)p_1230_2_, (double)p_1230_3_, (double)p_1230_4_, p_1230_1_.func_211_a(this.field_1772_a, p_1230_2_, p_1230_3_, p_1230_4_, 4));
+         this.func_1231_e(p_1230_1_, p_1230_2_, p_1230_3_, p_1230_4_, p_1230_1_.func_211_a(this.field_1772_a, p_1230_2_, p_1230_3_, p_1230_4_, 4));
          tessellator.func_988_c(-f16, 0.0F, 0.0F);
          flag = true;
       }
@@ -1270,7 +1269,7 @@
 
          tessellator.func_987_a(f7 * f23, f11 * f23, f15 * f23);
          tessellator.func_988_c(-f16, 0.0F, 0.0F);
-         this.func_1236_f(p_1230_1_, (double)p_1230_2_, (double)p_1230_3_, (double)p_1230_4_, p_1230_1_.func_211_a(this.field_1772_a, p_1230_2_, p_1230_3_, p_1230_4_, 5));
+         this.func_1236_f(p_1230_1_, p_1230_2_, p_1230_3_, p_1230_4_, p_1230_1_.func_211_a(this.field_1772_a, p_1230_2_, p_1230_3_, p_1230_4_, 5));
          tessellator.func_988_c(f16, 0.0F, 0.0F);
          flag = true;
       }
@@ -1384,7 +1383,7 @@
       }
 
       tessellator.func_987_a(f * f5, f * f5, f * f5);
-      this.func_1244_a(p_1218_1_, (double)p_1218_2_, (double)p_1218_3_, (double)p_1218_4_, p_1218_1_.func_211_a(this.field_1772_a, p_1218_2_, p_1218_3_, p_1218_4_, 0));
+      this.func_1244_a(p_1218_1_, p_1218_2_, p_1218_3_, p_1218_4_, p_1218_1_.func_211_a(this.field_1772_a, p_1218_2_, p_1218_3_, p_1218_4_, 0));
       flag = true;
       f5 = p_1218_1_.func_241_c(this.field_1772_a, p_1218_2_, p_1218_3_ + 1, p_1218_4_);
       if (blockdoor.field_362_bj < 1.0D) {
@@ -1396,7 +1395,7 @@
       }
 
       tessellator.func_987_a(f1 * f5, f1 * f5, f1 * f5);
-      this.func_1217_b(p_1218_1_, (double)p_1218_2_, (double)p_1218_3_, (double)p_1218_4_, p_1218_1_.func_211_a(this.field_1772_a, p_1218_2_, p_1218_3_, p_1218_4_, 1));
+      this.func_1217_b(p_1218_1_, p_1218_2_, p_1218_3_, p_1218_4_, p_1218_1_.func_211_a(this.field_1772_a, p_1218_2_, p_1218_3_, p_1218_4_, 1));
       flag = true;
       f5 = p_1218_1_.func_241_c(this.field_1772_a, p_1218_2_, p_1218_3_, p_1218_4_ - 1);
       if (blockdoor.field_366_bh > 0.0D) {
@@ -1414,7 +1413,7 @@
          i = -i;
       }
 
-      this.func_1220_c(p_1218_1_, (double)p_1218_2_, (double)p_1218_3_, (double)p_1218_4_, i);
+      this.func_1220_c(p_1218_1_, p_1218_2_, p_1218_3_, p_1218_4_, i);
       flag = true;
       this.field_1774_c = false;
       f5 = p_1218_1_.func_241_c(this.field_1772_a, p_1218_2_, p_1218_3_, p_1218_4_ + 1);
@@ -1433,7 +1432,7 @@
          i = -i;
       }
 
-      this.func_1225_d(p_1218_1_, (double)p_1218_2_, (double)p_1218_3_, (double)p_1218_4_, i);
+      this.func_1225_d(p_1218_1_, p_1218_2_, p_1218_3_, p_1218_4_, i);
       flag = true;
       this.field_1774_c = false;
       f5 = p_1218_1_.func_241_c(this.field_1772_a, p_1218_2_ - 1, p_1218_3_, p_1218_4_);
@@ -1452,7 +1451,7 @@
          i = -i;
       }
 
-      this.func_1231_e(p_1218_1_, (double)p_1218_2_, (double)p_1218_3_, (double)p_1218_4_, i);
+      this.func_1231_e(p_1218_1_, p_1218_2_, p_1218_3_, p_1218_4_, i);
       flag = true;
       this.field_1774_c = false;
       f5 = p_1218_1_.func_241_c(this.field_1772_a, p_1218_2_ + 1, p_1218_3_, p_1218_4_);
@@ -1471,7 +1470,7 @@
          i = -i;
       }
 
-      this.func_1236_f(p_1218_1_, (double)p_1218_2_, (double)p_1218_3_, (double)p_1218_4_, i);
+      this.func_1236_f(p_1218_1_, p_1218_2_, p_1218_3_, p_1218_4_, i);
       flag = true;
       this.field_1774_c = false;
       return flag;
@@ -1490,13 +1489,13 @@
       double d2 = ((double)j + p_1244_1_.field_366_bh * 16.0D) / 256.0D;
       double d3 = ((double)j + p_1244_1_.field_360_bk * 16.0D - 0.01D) / 256.0D;
       if (p_1244_1_.field_370_bf < 0.0D || p_1244_1_.field_364_bi > 1.0D) {
-         d0 = (double)(((float)i + 0.0F) / 256.0F);
-         d1 = (double)(((float)i + 15.99F) / 256.0F);
+         d0 = ((float)i + 0.0F) / 256.0F;
+         d1 = ((float)i + 15.99F) / 256.0F;
       }
 
       if (p_1244_1_.field_366_bh < 0.0D || p_1244_1_.field_360_bk > 1.0D) {
-         d2 = (double)(((float)j + 0.0F) / 256.0F);
-         d3 = (double)(((float)j + 15.99F) / 256.0F);
+         d2 = ((float)j + 0.0F) / 256.0F;
+         d3 = ((float)j + 15.99F) / 256.0F;
       }
 
       double d4 = p_1244_2_ + p_1244_1_.field_370_bf;
@@ -1523,13 +1522,13 @@
       double d2 = ((double)j + p_1217_1_.field_366_bh * 16.0D) / 256.0D;
       double d3 = ((double)j + p_1217_1_.field_360_bk * 16.0D - 0.01D) / 256.0D;
       if (p_1217_1_.field_370_bf < 0.0D || p_1217_1_.field_364_bi > 1.0D) {
-         d0 = (double)(((float)i + 0.0F) / 256.0F);
-         d1 = (double)(((float)i + 15.99F) / 256.0F);
+         d0 = ((float)i + 0.0F) / 256.0F;
+         d1 = ((float)i + 15.99F) / 256.0F;
       }
 
       if (p_1217_1_.field_366_bh < 0.0D || p_1217_1_.field_360_bk > 1.0D) {
-         d2 = (double)(((float)j + 0.0F) / 256.0F);
-         d3 = (double)(((float)j + 15.99F) / 256.0F);
+         d2 = ((float)j + 0.0F) / 256.0F;
+         d3 = ((float)j + 15.99F) / 256.0F;
       }
 
       double d4 = p_1217_2_ + p_1217_1_.field_370_bf;
@@ -1562,13 +1561,13 @@
       }
 
       if (p_1220_1_.field_370_bf < 0.0D || p_1220_1_.field_364_bi > 1.0D) {
-         d0 = (double)(((float)i + 0.0F) / 256.0F);
-         d1 = (double)(((float)i + 15.99F) / 256.0F);
+         d0 = ((float)i + 0.0F) / 256.0F;
+         d1 = ((float)i + 15.99F) / 256.0F;
       }
 
       if (p_1220_1_.field_368_bg < 0.0D || p_1220_1_.field_362_bj > 1.0D) {
-         d2 = (double)(((float)j + 0.0F) / 256.0F);
-         d3 = (double)(((float)j + 15.99F) / 256.0F);
+         d2 = ((float)j + 0.0F) / 256.0F;
+         d3 = ((float)j + 15.99F) / 256.0F;
       }
 
       double d9 = p_1220_2_ + p_1220_1_.field_370_bf;
@@ -1601,13 +1600,13 @@
       }
 
       if (p_1225_1_.field_370_bf < 0.0D || p_1225_1_.field_364_bi > 1.0D) {
-         d0 = (double)(((float)i + 0.0F) / 256.0F);
-         d1 = (double)(((float)i + 15.99F) / 256.0F);
+         d0 = ((float)i + 0.0F) / 256.0F;
+         d1 = ((float)i + 15.99F) / 256.0F;
       }
 
       if (p_1225_1_.field_368_bg < 0.0D || p_1225_1_.field_362_bj > 1.0D) {
-         d2 = (double)(((float)j + 0.0F) / 256.0F);
-         d3 = (double)(((float)j + 15.99F) / 256.0F);
+         d2 = ((float)j + 0.0F) / 256.0F;
+         d3 = ((float)j + 15.99F) / 256.0F;
       }
 
       double d9 = p_1225_2_ + p_1225_1_.field_370_bf;
@@ -1640,13 +1639,13 @@
       }
 
       if (p_1231_1_.field_366_bh < 0.0D || p_1231_1_.field_360_bk > 1.0D) {
-         d0 = (double)(((float)i + 0.0F) / 256.0F);
-         d1 = (double)(((float)i + 15.99F) / 256.0F);
+         d0 = ((float)i + 0.0F) / 256.0F;
+         d1 = ((float)i + 15.99F) / 256.0F;
       }
 
       if (p_1231_1_.field_368_bg < 0.0D || p_1231_1_.field_362_bj > 1.0D) {
-         d2 = (double)(((float)j + 0.0F) / 256.0F);
-         d3 = (double)(((float)j + 15.99F) / 256.0F);
+         d2 = ((float)j + 0.0F) / 256.0F;
+         d3 = ((float)j + 15.99F) / 256.0F;
       }
 
       double d9 = p_1231_2_ + p_1231_1_.field_370_bf;
@@ -1679,13 +1678,13 @@
       }
 
       if (p_1236_1_.field_366_bh < 0.0D || p_1236_1_.field_360_bk > 1.0D) {
-         d0 = (double)(((float)i + 0.0F) / 256.0F);
-         d1 = (double)(((float)i + 15.99F) / 256.0F);
+         d0 = ((float)i + 0.0F) / 256.0F;
+         d1 = ((float)i + 15.99F) / 256.0F;
       }
 
       if (p_1236_1_.field_368_bg < 0.0D || p_1236_1_.field_362_bj > 1.0D) {
-         d2 = (double)(((float)j + 0.0F) / 256.0F);
-         d3 = (double)(((float)j + 15.99F) / 256.0F);
+         d2 = ((float)j + 0.0F) / 256.0F;
+         d3 = ((float)j + 15.99F) / 256.0F;
       }
 
       double d9 = p_1236_2_ + p_1236_1_.field_364_bi;
